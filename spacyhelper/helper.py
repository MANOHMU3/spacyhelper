# AUTOGENERATED! DO NOT EDIT! File to edit: 00_helper.ipynb (unless otherwise specified).

__all__ = ['count_tags', 'evaluate']

# Cell
import spacy
from spacy.gold import GoldParse
from spacy.scorer import Scorer

# Cell
def count_tags(spacy_data):
    """
    Count the occurence of each tag at token level. This is NOT SENT level
    """
    ents_count = dict()
    for instance in spacy_data:
        ents = instance[1]['entities']
        for ent in ents: ents_count[ent[2]] = ents_count.get(ent[2], 0) + 1
    return ents_count

# Cell
def evaluate(ner_model, examples):
    """
    Evaluate your spacy NER model by passing in the model and Test Data (in spacy format)
    """
    scorer = Scorer()
    for input_, annot in examples:
        doc_gold_text = ner_model.make_doc(input_)
        gold = GoldParse(doc_gold_text, entities=annot['entities'])
        pred_value = ner_model(input_)
        scorer.score(pred_value, gold)
    return scorer.scores